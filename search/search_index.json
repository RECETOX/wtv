{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"WTV Documentation","text":"<p>Welcome to the WTV documentation. This project provides tools for ion selection in mass spectrometry data.</p>"},{"location":"#features","title":"Features","text":"<ul> <li>Command-line interface (CLI) for easy usage.</li> <li>Library functions for programmatic access.</li> </ul> <p>Explore the sections below to get started:</p> <ul> <li>Installation</li> <li>CLI Usage</li> <li>Library Usage</li> <li>API Reference</li> </ul>"},{"location":"api/","title":"API Reference","text":""},{"location":"api/#srcutils","title":"<code>src.utils</code>","text":"<ul> <li><code>read_msp</code>: Reads an MSP file and returns metadata and retention time data.</li> <li><code>write_msp</code>: Writes filtered ions to an MSP file.</li> </ul>"},{"location":"api/#srcion_selection","title":"<code>src.ion_selection</code>","text":"<ul> <li><code>main_logic</code>: Core logic for ion selection.</li> </ul>"},{"location":"api_ion_selection/","title":"API Reference: Ion Selection","text":""},{"location":"api_ion_selection/#main_logic","title":"<code>main_logic</code>","text":"<p>Core function for ion selection.</p>"},{"location":"api_ion_selection/#parameters","title":"Parameters","text":"<ul> <li><code>msp_file_path</code> (str): Path to the input MSP file.</li> <li><code>output_directory</code> (str): Directory to save the output files.</li> <li><code>mz_min</code> (int): Minimum m/z value.</li> <li><code>mz_max</code> (int): Maximum m/z value.</li> <li><code>rt_window</code> (float): Retention time window.</li> <li><code>min_ion_intensity_percent</code> (float): Minimum ion intensity percentage.</li> <li><code>min_ion_num</code> (int): Minimum number of ions.</li> <li><code>prefer_mz_threshold</code> (int): Preferred m/z threshold.</li> <li><code>similarity_threshold</code> (float): Similarity threshold.</li> <li><code>fr_factor</code> (float): FR factor.</li> <li><code>retention_time_max</code> (float): Maximum retention time.</li> </ul>"},{"location":"api_ion_selection/#example","title":"Example","text":"<pre><code>from src.ion_selection import main\n\nmain(\n    msp_file_path=\"input.msp\",\n    output_directory=\"output\",\n    mz_min=35,\n    mz_max=400,\n    rt_window=2.00,\n    min_ion_intensity_percent=7,\n    min_ion_num=2,\n    prefer_mz_threshold=60,\n    similarity_threshold=0.85,\n    fr_factor=2.0,\n    retention_time_max=68.80,\n)\n</code></pre>"},{"location":"api_utils/","title":"API Reference: Utils","text":""},{"location":"api_utils/#read_msp","title":"<code>read_msp</code>","text":"<p>Reads an MSP file and returns metadata and retention time data.</p>"},{"location":"api_utils/#parameters","title":"Parameters","text":"<ul> <li><code>msp_file_path</code> (str): Path to the MSP file.</li> </ul>"},{"location":"api_utils/#returns","title":"Returns","text":"<ul> <li><code>Tuple[Dict[str, Dict[int, int]], pd.DataFrame]</code>: Metadata and retention time data.</li> </ul>"},{"location":"api_utils/#example","title":"Example","text":"<pre><code>from src.utils import read_msp\n\nmeta, rt_data = read_msp(\"input.msp\")\n</code></pre>"},{"location":"api_utils/#write_msp","title":"<code>write_msp</code>","text":"<p>Writes filtered ions to an MSP file.</p>"},{"location":"api_utils/#parameters_1","title":"Parameters","text":"<ul> <li><code>ion_df</code> (pd.DataFrame): DataFrame containing ion data.</li> <li><code>output_directory</code> (Path): Directory to save the output MSP file.</li> <li><code>source_msp_file</code> (Path): Path to the source MSP file.</li> </ul>"},{"location":"api_utils/#example_1","title":"Example","text":"<pre><code>from src.utils import write_msp\n\nwrite_msp(ion_df, \"output\", \"input.msp\")\n</code></pre>"},{"location":"cli_usage/","title":"CLI Usage","text":"<p>The WTV CLI provides an easy way to perform ion selection.</p>"},{"location":"cli_usage/#basic-command","title":"Basic Command","text":"<pre><code>wtv-cli --msp_path input.msp --outpath output --mz_min 35 --mz_max 400 ...\n</code></pre>"},{"location":"cli_usage/#options","title":"Options","text":"<ul> <li><code>--msp_path</code>: Path to the input MSP file.</li> <li><code>--outpath</code>: Directory to save the output files.</li> <li><code>--mz_min</code>: Minimum m/z value (default: 35).</li> <li><code>--mz_max</code>: Maximum m/z value (default: 400).</li> <li><code>--rt_window</code>: Retention time window (default: 2.00).</li> <li><code>--min_ion_intensity_percent</code>: Minimum ion intensity percentage (default: 7).</li> <li><code>--min_ion_num</code>: Minimum number of ions (default: 2).</li> <li><code>--prefer_mz_threshold</code>: Preferred m/z threshold (default: 60).</li> <li><code>--similarity_threshold</code>: Similarity threshold (default: 0.85).</li> <li><code>--fr_factor</code>: FR factor (default: 2.0).</li> <li><code>--retention_time_max</code>: Maximum retention time (default: 68.80).</li> </ul>"},{"location":"cli_usage/#example","title":"Example","text":"<pre><code>wtv-cli --msp_path input.msp --outpath output --mz_min 50 --mz_max 500\n</code></pre>"},{"location":"installation/","title":"Installation","text":""},{"location":"installation/#using-poetry","title":"Using Poetry","text":"<ol> <li> <p>Clone the repository:   <pre>\n   ```bash\n   git clone https://github.com/RECETOX/wtv.git\n   cd wtv\n   ```\n   </pre> </p> </li> <li> <p>Install dependencies:   <pre>\n   ```bash\n   poetry install\n   ```\n   </pre> </p> </li> <li> <p>Install development dependencies (optional):   <pre>\n   ```bash\n   poetry install --with dev\n   ```\n   </pre> </p> </li> </ol>"},{"location":"installation/#using-pip","title":"Using pip","text":"<ol> <li>Install the library directly from PyPI:  <pre>\n   ```bash\n   pip install wtv\n   ```\n   </pre> </li> </ol>"},{"location":"installation/#verify-installation","title":"Verify Installation","text":"<p>Run the following command to verify the installation:</p> <pre>\n\n<pre><code>wtv-cli --help\n</code></pre>\n\n</pre>"},{"location":"library_usage/","title":"Library Usage","text":"<p>The WTV library provides programmatic access to its core functionality.</p>"},{"location":"library_usage/#example-usage","title":"Example Usage","text":"<pre><code>from src.ion_selection import main\n\nmain(\n    msp_file_path=\"input.msp\",\n    output_directory=\"output\",\n    mz_min=35,\n    mz_max=400,\n    rt_window=2.00,\n    min_ion_intensity_percent=7,\n    min_ion_num=2,\n    prefer_mz_threshold=60,\n    similarity_threshold=0.85,\n    fr_factor=2.0,\n    retention_time_max=68.80,\n)\n</code></pre>"},{"location":"library_usage/#functions","title":"Functions","text":"<ul> <li><code>main</code>: Core function for ion selection.</li> <li><code>read_msp</code>: Reads an MSP file and returns metadata and retention time data.</li> <li><code>write_msp</code>: Writes filtered ions to an MSP file.</li> </ul>"},{"location":"usage/","title":"Usage","text":""},{"location":"usage/#cli-usage","title":"CLI Usage","text":"<pre><code>wtv-cli --msp_path input.msp --outpath output --mz_min 35 --mz_max 400 ...\n</code></pre>"},{"location":"usage/#library-usage","title":"Library Usage","text":"<pre><code>from src.ion_selection import main_logic\n\nmain_logic(\n    msp_file_path=\"input.msp\",\n    output_directory=\"output\",\n    mz_min=35,\n    mz_max=400,\n    ...\n)\n</code></pre>"}]}