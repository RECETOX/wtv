name: Python package

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    name: Build for ${{ matrix.os }} with Python 3.12.9
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.12.9
        uses: actions/setup-python@v5
        with:
          python-version: 3.12.9
      - name: Python info
        shell: bash -e {0}
        run: |
          which python
          python --version
      - name: Upgrade pip and install dependencies
        run: |
          python -m pip install --upgrade pip poetry
          poetry lock
          poetry install --with dev
      # Add Poetry's virtualenv to PATH so poetry run and subprocess calls work
      - name: Add Poetry virtualenv to PATH
        shell: bash
        run: |
          echo "$(poetry env info --path)/Scripts" >> $GITHUB_PATH
      - name: Run unit tests
        run: poetry run pytest
      - name: Verify that we can build the package
        run: poetry build

  lint:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
      fail-fast: false
    name: Linting build
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: 3.11
      - name: Python info
        shell: bash -e {0}
        run: |
          which python
          python --version
      - name: Upgrade pip and install dependencies
        run: |
          python -m pip install --upgrade pip poetry
          poetry lock
          poetry install --with dev
      - name: Check style against standards using ruff
        run: poetry run ruff check .
